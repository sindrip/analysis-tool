//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/sindrip/school/programanalysis/analysis-tool/src/Parser/MicroC.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Parser.Generated {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class MicroCLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		INT=1, IF=2, ELSE=3, WHILE=4, READ=5, WRITE=6, TRUE=7, FALSE=8, NOT=9, 
		EQ=10, NOTEQ=11, LTEQ=12, GTEQ=13, ASSIGN=14, LT=15, GT=16, OR=17, AND=18, 
		PLUS=19, MINUS=20, MULT=21, DIV=22, MOD=23, LBRACE=24, RBRACE=25, LPAREN=26, 
		RPAREN=27, LBRACKET=28, RBRACKET=29, SEMICOLON=30, COMMA=31, DOT=32, NUMBER=33, 
		IDENT=34, WHITESPACE=35;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INT", "IF", "ELSE", "WHILE", "READ", "WRITE", "TRUE", "FALSE", "NOT", 
		"EQ", "NOTEQ", "LTEQ", "GTEQ", "ASSIGN", "LT", "GT", "OR", "AND", "PLUS", 
		"MINUS", "MULT", "DIV", "MOD", "LBRACE", "RBRACE", "LPAREN", "RPAREN", 
		"LBRACKET", "RBRACKET", "SEMICOLON", "COMMA", "DOT", "NUMBER", "IDENT", 
		"WHITESPACE"
	};


	public MicroCLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public MicroCLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'int'", "'if'", "'else'", "'while'", "'read'", "'write'", "'true'", 
		"'false'", "'not'", "'=='", "'!='", "'<='", "'>='", "':='", "'<'", "'>'", 
		"'|'", "'&'", "'+'", "'-'", "'*'", "'/'", "'%'", "'{'", "'}'", "'('", 
		"')'", "'['", "']'", "';'", "','", "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INT", "IF", "ELSE", "WHILE", "READ", "WRITE", "TRUE", "FALSE", 
		"NOT", "EQ", "NOTEQ", "LTEQ", "GTEQ", "ASSIGN", "LT", "GT", "OR", "AND", 
		"PLUS", "MINUS", "MULT", "DIV", "MOD", "LBRACE", "RBRACE", "LPAREN", "RPAREN", 
		"LBRACKET", "RBRACKET", "SEMICOLON", "COMMA", "DOT", "NUMBER", "IDENT", 
		"WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MicroC.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static MicroCLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '%', '\xB6', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', '\"', '\x4', 
		'#', '\t', '#', '\x4', '$', '\t', '$', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x3', 
		'\x18', '\x3', '\x18', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', 
		'\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', '\x3', 
		'\x1D', '\x3', '\x1D', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', '\x3', 
		'\x1F', '\x3', ' ', '\x3', ' ', '\x3', '!', '\x3', '!', '\x3', '\"', '\x6', 
		'\"', '\xAA', '\n', '\"', '\r', '\"', '\xE', '\"', '\xAB', '\x3', '#', 
		'\x6', '#', '\xAF', '\n', '#', '\r', '#', '\xE', '#', '\xB0', '\x3', '$', 
		'\x3', '$', '\x3', '$', '\x3', '$', '\x2', '\x2', '%', '\x3', '\x3', '\x5', 
		'\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', 
		'\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', 
		'\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', 
		'%', '\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '-', '\x18', '/', 
		'\x19', '\x31', '\x1A', '\x33', '\x1B', '\x35', '\x1C', '\x37', '\x1D', 
		'\x39', '\x1E', ';', '\x1F', '=', ' ', '?', '!', '\x41', '\"', '\x43', 
		'#', '\x45', '$', 'G', '%', '\x3', '\x2', '\x5', '\x3', '\x2', '\x32', 
		';', '\x4', '\x2', '\x43', '\\', '\x63', '|', '\x5', '\x2', '\v', '\f', 
		'\xE', '\xF', '\"', '\"', '\x2', '\xB7', '\x2', '\x3', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', 
		'\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'+', '\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x33', '\x3', '\x2', '\x2', '\x2', '\x2', '\x35', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x37', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x39', '\x3', '\x2', '\x2', '\x2', '\x2', ';', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '=', '\x3', '\x2', '\x2', '\x2', '\x2', '?', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x41', '\x3', '\x2', '\x2', '\x2', '\x2', '\x43', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x45', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'G', '\x3', '\x2', '\x2', '\x2', '\x3', 'I', '\x3', '\x2', '\x2', '\x2', 
		'\x5', 'M', '\x3', '\x2', '\x2', '\x2', '\a', 'P', '\x3', '\x2', '\x2', 
		'\x2', '\t', 'U', '\x3', '\x2', '\x2', '\x2', '\v', '[', '\x3', '\x2', 
		'\x2', '\x2', '\r', '`', '\x3', '\x2', '\x2', '\x2', '\xF', '\x66', '\x3', 
		'\x2', '\x2', '\x2', '\x11', 'k', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'q', '\x3', '\x2', '\x2', '\x2', '\x15', 'u', '\x3', '\x2', '\x2', '\x2', 
		'\x17', 'x', '\x3', '\x2', '\x2', '\x2', '\x19', '{', '\x3', '\x2', '\x2', 
		'\x2', '\x1B', '~', '\x3', '\x2', '\x2', '\x2', '\x1D', '\x81', '\x3', 
		'\x2', '\x2', '\x2', '\x1F', '\x84', '\x3', '\x2', '\x2', '\x2', '!', 
		'\x86', '\x3', '\x2', '\x2', '\x2', '#', '\x88', '\x3', '\x2', '\x2', 
		'\x2', '%', '\x8A', '\x3', '\x2', '\x2', '\x2', '\'', '\x8C', '\x3', '\x2', 
		'\x2', '\x2', ')', '\x8E', '\x3', '\x2', '\x2', '\x2', '+', '\x90', '\x3', 
		'\x2', '\x2', '\x2', '-', '\x92', '\x3', '\x2', '\x2', '\x2', '/', '\x94', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\x96', '\x3', '\x2', '\x2', '\x2', 
		'\x33', '\x98', '\x3', '\x2', '\x2', '\x2', '\x35', '\x9A', '\x3', '\x2', 
		'\x2', '\x2', '\x37', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x39', '\x9E', 
		'\x3', '\x2', '\x2', '\x2', ';', '\xA0', '\x3', '\x2', '\x2', '\x2', '=', 
		'\xA2', '\x3', '\x2', '\x2', '\x2', '?', '\xA4', '\x3', '\x2', '\x2', 
		'\x2', '\x41', '\xA6', '\x3', '\x2', '\x2', '\x2', '\x43', '\xA9', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\xAE', '\x3', '\x2', '\x2', '\x2', 'G', 
		'\xB2', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\a', 'k', '\x2', '\x2', 
		'J', 'K', '\a', 'p', '\x2', '\x2', 'K', 'L', '\a', 'v', '\x2', '\x2', 
		'L', '\x4', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\a', 'k', '\x2', '\x2', 
		'N', 'O', '\a', 'h', '\x2', '\x2', 'O', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'P', 'Q', '\a', 'g', '\x2', '\x2', 'Q', 'R', '\a', 'n', '\x2', '\x2', 
		'R', 'S', '\a', 'u', '\x2', '\x2', 'S', 'T', '\a', 'g', '\x2', '\x2', 
		'T', '\b', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\a', 'y', '\x2', '\x2', 
		'V', 'W', '\a', 'j', '\x2', '\x2', 'W', 'X', '\a', 'k', '\x2', '\x2', 
		'X', 'Y', '\a', 'n', '\x2', '\x2', 'Y', 'Z', '\a', 'g', '\x2', '\x2', 
		'Z', '\n', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\a', 't', '\x2', '\x2', 
		'\\', ']', '\a', 'g', '\x2', '\x2', ']', '^', '\a', '\x63', '\x2', '\x2', 
		'^', '_', '\a', '\x66', '\x2', '\x2', '_', '\f', '\x3', '\x2', '\x2', 
		'\x2', '`', '\x61', '\a', 'y', '\x2', '\x2', '\x61', '\x62', '\a', 't', 
		'\x2', '\x2', '\x62', '\x63', '\a', 'k', '\x2', '\x2', '\x63', '\x64', 
		'\a', 'v', '\x2', '\x2', '\x64', '\x65', '\a', 'g', '\x2', '\x2', '\x65', 
		'\xE', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', '\a', 'v', '\x2', '\x2', 
		'g', 'h', '\a', 't', '\x2', '\x2', 'h', 'i', '\a', 'w', '\x2', '\x2', 
		'i', 'j', '\a', 'g', '\x2', '\x2', 'j', '\x10', '\x3', '\x2', '\x2', '\x2', 
		'k', 'l', '\a', 'h', '\x2', '\x2', 'l', 'm', '\a', '\x63', '\x2', '\x2', 
		'm', 'n', '\a', 'n', '\x2', '\x2', 'n', 'o', '\a', 'u', '\x2', '\x2', 
		'o', 'p', '\a', 'g', '\x2', '\x2', 'p', '\x12', '\x3', '\x2', '\x2', '\x2', 
		'q', 'r', '\a', 'p', '\x2', '\x2', 'r', 's', '\a', 'q', '\x2', '\x2', 
		's', 't', '\a', 'v', '\x2', '\x2', 't', '\x14', '\x3', '\x2', '\x2', '\x2', 
		'u', 'v', '\a', '?', '\x2', '\x2', 'v', 'w', '\a', '?', '\x2', '\x2', 
		'w', '\x16', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\a', '#', '\x2', '\x2', 
		'y', 'z', '\a', '?', '\x2', '\x2', 'z', '\x18', '\x3', '\x2', '\x2', '\x2', 
		'{', '|', '\a', '>', '\x2', '\x2', '|', '}', '\a', '?', '\x2', '\x2', 
		'}', '\x1A', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', '\a', '@', '\x2', 
		'\x2', '\x7F', '\x80', '\a', '?', '\x2', '\x2', '\x80', '\x1C', '\x3', 
		'\x2', '\x2', '\x2', '\x81', '\x82', '\a', '<', '\x2', '\x2', '\x82', 
		'\x83', '\a', '?', '\x2', '\x2', '\x83', '\x1E', '\x3', '\x2', '\x2', 
		'\x2', '\x84', '\x85', '\a', '>', '\x2', '\x2', '\x85', ' ', '\x3', '\x2', 
		'\x2', '\x2', '\x86', '\x87', '\a', '@', '\x2', '\x2', '\x87', '\"', '\x3', 
		'\x2', '\x2', '\x2', '\x88', '\x89', '\a', '~', '\x2', '\x2', '\x89', 
		'$', '\x3', '\x2', '\x2', '\x2', '\x8A', '\x8B', '\a', '(', '\x2', '\x2', 
		'\x8B', '&', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8D', '\a', '-', '\x2', 
		'\x2', '\x8D', '(', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x8F', '\a', 
		'/', '\x2', '\x2', '\x8F', '*', '\x3', '\x2', '\x2', '\x2', '\x90', '\x91', 
		'\a', ',', '\x2', '\x2', '\x91', ',', '\x3', '\x2', '\x2', '\x2', '\x92', 
		'\x93', '\a', '\x31', '\x2', '\x2', '\x93', '.', '\x3', '\x2', '\x2', 
		'\x2', '\x94', '\x95', '\a', '\'', '\x2', '\x2', '\x95', '\x30', '\x3', 
		'\x2', '\x2', '\x2', '\x96', '\x97', '\a', '}', '\x2', '\x2', '\x97', 
		'\x32', '\x3', '\x2', '\x2', '\x2', '\x98', '\x99', '\a', '\x7F', '\x2', 
		'\x2', '\x99', '\x34', '\x3', '\x2', '\x2', '\x2', '\x9A', '\x9B', '\a', 
		'*', '\x2', '\x2', '\x9B', '\x36', '\x3', '\x2', '\x2', '\x2', '\x9C', 
		'\x9D', '\a', '+', '\x2', '\x2', '\x9D', '\x38', '\x3', '\x2', '\x2', 
		'\x2', '\x9E', '\x9F', '\a', ']', '\x2', '\x2', '\x9F', ':', '\x3', '\x2', 
		'\x2', '\x2', '\xA0', '\xA1', '\a', '_', '\x2', '\x2', '\xA1', '<', '\x3', 
		'\x2', '\x2', '\x2', '\xA2', '\xA3', '\a', '=', '\x2', '\x2', '\xA3', 
		'>', '\x3', '\x2', '\x2', '\x2', '\xA4', '\xA5', '\a', '.', '\x2', '\x2', 
		'\xA5', '@', '\x3', '\x2', '\x2', '\x2', '\xA6', '\xA7', '\a', '\x30', 
		'\x2', '\x2', '\xA7', '\x42', '\x3', '\x2', '\x2', '\x2', '\xA8', '\xAA', 
		'\t', '\x2', '\x2', '\x2', '\xA9', '\xA8', '\x3', '\x2', '\x2', '\x2', 
		'\xAA', '\xAB', '\x3', '\x2', '\x2', '\x2', '\xAB', '\xA9', '\x3', '\x2', 
		'\x2', '\x2', '\xAB', '\xAC', '\x3', '\x2', '\x2', '\x2', '\xAC', '\x44', 
		'\x3', '\x2', '\x2', '\x2', '\xAD', '\xAF', '\t', '\x3', '\x2', '\x2', 
		'\xAE', '\xAD', '\x3', '\x2', '\x2', '\x2', '\xAF', '\xB0', '\x3', '\x2', 
		'\x2', '\x2', '\xB0', '\xAE', '\x3', '\x2', '\x2', '\x2', '\xB0', '\xB1', 
		'\x3', '\x2', '\x2', '\x2', '\xB1', '\x46', '\x3', '\x2', '\x2', '\x2', 
		'\xB2', '\xB3', '\t', '\x4', '\x2', '\x2', '\xB3', '\xB4', '\x3', '\x2', 
		'\x2', '\x2', '\xB4', '\xB5', '\b', '$', '\x2', '\x2', '\xB5', 'H', '\x3', 
		'\x2', '\x2', '\x2', '\x5', '\x2', '\xAB', '\xB0', '\x3', '\b', '\x2', 
		'\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Parser.Generated
